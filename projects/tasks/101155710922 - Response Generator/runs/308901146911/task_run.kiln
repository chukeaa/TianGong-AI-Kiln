{
  "v": 1,
  "id": "308901146911",
  "created_at": "2025-03-07T16:28:11.255997",
  "created_by": "TianGong",
  "input": "某钢铁厂生产两种产品：$1Cr13$不锈钢（日产量为$x_1$吨）和$GCr15$轴承钢（日产量为$x_2$吨）。厂方希望最大化每日总收益，收益公式为$C = 1000x_1 + 200x_2$元。生产需满足以下条件：\n\n日产量总和：$x_1 + x_2 ≥ 900$ 吨\n铬消耗量：$0.15x_1 + 0.015x_2 ≤ 100$ 吨\n电力消耗：$9x_1 + 6x_2 ≤ 8000$ 千瓦时\n生产时间：$x_1⁄36 + x_2⁄48 ≤ 24$ 小时\n非负约束：$x_1 ≥ 0，x_2 ≥ 0$\n请根据上述条件，建立线性规划模型，并求出使收益C最大的最优日产量$x_1$和$x_2$，以及对应的最大收益。",
  "input_source": {
    "type": "human",
    "properties": {
      "created_by": "TianGong"
    }
  },
  "output": {
    "v": 1,
    "id": "166820007111",
    "path": null,
    "created_at": "2025-03-07T16:28:11.255997",
    "created_by": "TianGong",
    "output": "下面给出求解的主要步骤。首先将题意翻译成线性规划的标准形式：\n\n(1)  目标函数：  \n     最大化  C = 1000x₁ + 200x₂  \n\n(2)  约束条件：  \n\n     ①  产量下限：  \n         x₁ + x₂ ≥ 900  \n\n     ②  铬消耗量：  \n         0.15x₁ + 0.015x₂ ≤ 100  \n\n     ③  电力消耗：  \n         9x₁ + 6x₂ ≤ 8000  \n\n     ④  生产时间：  \n         x₁/36 + x₂/48 ≤ 24  \n\n     ⑤  非负约束：  \n         x₁ ≥ 0,  x₂ ≥ 0  \n\n-------------------------------------------------------------------------------\n一、转化为方程形式并寻找候选顶点\n\n线性规划的可行解往往出现在约束多面体的顶点处，因此只需检查各约束“边界”交点及与坐标轴的交点(在满足其他约束的情况下)即可。\n\n1. 记各约束的“边界”方程如下(只将“≤”或“≥”改成“=”以便求交点)：  \n   • (1')  x₁ + x₂ = 900  \n   • (2')  0.15x₁ + 0.015x₂ = 100  \n   • (3')  9x₁ + 6x₂ = 8000  \n   • (4')  x₁/36 + x₂/48 = 24  \n\n2. 将每两个边界方程联立，或与 x₁=0、x₂=0 联立，求得可能的顶点，再检验它们是否满足所有不等式约束。\n\n(1)  先检查与坐标轴相交  \n   •  x₁=0 代入其他约束：  \n      - 由 (1) 得 x₂ ≥ 900，考虑 x₂ = 900 为“边界点”D；  \n      - 再检验其余约束；  \n   •  x₂=0 代入其他约束：  \n      - 由 (1) 得 x₁ ≥ 900，但需同时检验 (2) 等能否满足。\n\n(2)  检查各对边界方程的交点，典型如 (1') & (2')、(2') & (4') 等等，并逐一检验其余约束。\n\n经过系统求解并逐一检验可行性，可得到以下几个“候选顶点”在所有不等式约束下均可行(其余要么不满足 x₁+x₂≥900，要么违反其他耗用约束)：\n\n•  顶点A：由 (2') 与 (4') 联立得到  \n   0.15x₁ + 0.015x₂ = 100  \n   x₁/36 + x₂/48 = 24  \n\n•  顶点B：由 x₁=0 与 “生产时间”约束 (4') 的边界相交  \n   (即 x₁=0,  x₂=1152 )  \n\n•  顶点C：由 (1') 与 (2') 联立得到  \n   x₁ + x₂ = 900  \n   0.15x₁ + 0.015x₂ = 100  \n\n•  顶点D：由 x₁=0,  x₂=900 (满足 x₁+x₂=900 边界)  \n\n下面分别给出这几个可行顶点的坐标与目标函数值。\n\n-------------------------------------------------------------------------------\n二、求解各候选顶点的坐标\n\n1. 顶点A：由 (2') 与 (4') 联立\n\n   (2')  0.15x₁ + 0.015x₂ = 100  \n         ── 等价于  15x₁ + 1.5x₂ = 10000  (两边乘以 100)\n         再乘以 2 得：30x₁ + 3x₂ = 20000\n\n   (4')  x₁/36 + x₂/48 = 24  \n         ── 两边乘以 144(36与48的最小公倍数)得：  \n            4x₁ + 3x₂ = 3456\n\n   由此得到方程组  \n       30x₁ + 3x₂ = 20000      (I)  \n        4x₁ + 3x₂ = 3456       (II)\n\n   用 (I) - (II) 消去 x₂：  \n       (30x₁ - 4x₁) + (3x₂ - 3x₂) = 20000 - 3456  \n       26x₁ = 16544  \n       x₁ = 16544/26 ≈ 636.31  \n\n   将 x₁ 代回 (II)：  \n       4×636.31 + 3x₂ = 3456  \n       2545.24 + 3x₂ = 3456  \n       3x₂ = 3456 - 2545.24 = 910.76  \n       x₂ = 303.59 (左右)\n\n   验证其他约束后可行，记为  \n       A(636.31, 303.59)\n\n2. 顶点B：x₁=0 与 (4')\n\n   当 x₁=0 时，(4') 化为  \n       0/36 + x₂/48 = 24  \n       x₂ = 24×48 = 1152\n\n   同时检查其余  (1)、(2)、(3) 均满足，故  \n       B(0, 1152)\n\n3. 顶点C：由 (1') 与 (2') 联立\n\n   (1')  x₁ + x₂ = 900   \n         x₂ = 900 - x₁\n\n   (2')  0.15x₁ + 0.015x₂ = 100  \n         将 x₂ = 900 - x₁ 代入得  \n         0.15x₁ + 0.015(900 - x₁) = 100  \n         0.15x₁ + 13.5 - 0.015x₁ = 100  \n         0.135x₁ = 86.5  \n         x₁ ≈ 640.74,   x₂ ≈ 259.26\n\n   验证其余约束后可行，记为  \n       C(640.74, 259.26)\n\n4. 顶点D：x₁=0,  x₂=900\n\n   该点恰好满足 x₁ + x₂ = 900；经过检验 (2)、(3)、(4) 也均可行，记为  \n       D(0, 900)\n\n-------------------------------------------------------------------------------\n三、计算这些顶点的目标函数值\n\n目标函数 C = 1000x₁ + 200x₂。逐一代入：\n\n1)  A(636.31, 303.59)  \n    C(A) = 1000×636.31 + 200×303.59  \n          = 636310 + 60718  \n          ≈ 697028  (元/日)  \n\n2)  B(0, 1152)  \n    C(B) = 1000×0 + 200×1152  \n          = 230400  (元/日)  \n\n3)  C(640.74, 259.26)  \n    C(C) = 1000×640.74 + 200×259.26  \n          = 640740 + 51852  \n          ≈ 692592  (元/日)\n\n4)  D(0, 900)  \n    C(D) = 1000×0 + 200×900  \n          = 180000  (元/日)\n\n从以上结果可见，顶点 A 的目标函数值约为 697028 元/日，最大。\n\n-------------------------------------------------------------------------------\n四、结论\n\n由线性规划可知，使厂方每日总收益 (C) 最大时的最优排产方案是：  \n•  1Cr13不锈钢  (x₁)  ≈ 636 吨/日  \n•  GCr15轴承钢 (x₂)  ≈ 303 吨/日  \n\n对应的最大总收益约为  \n   Cmax ≈ 697000  元/日  \n\n(在实际生产中，可根据需要对小数部分做相应四舍五入并进行进一步排产安排。)",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "o1-2024-12-17",
        "model_provider": "openai",
        "prompt_id": "simple_prompt_builder"
      }
    },
    "rating": {
      "v": 1,
      "id": "238406490602",
      "path": null,
      "created_at": "2025-03-07T16:28:11.255997",
      "created_by": "TianGong",
      "type": "five_star",
      "value": 5,
      "requirement_ratings": {
        "837162031303": {
          "value": 5,
          "type": "five_star"
        }
      },
      "model_type": "task_output_rating"
    },
    "model_type": "task_output"
  },
  "repair_instructions": "该回答结构良好、系统化且在数学上具有一致性，得出了与标准参考中相同的近似最优解。关于寻找可行顶点、验证约束条件以及计算目标函数的解释逻辑清晰，并涵盖了所有必要步骤。轻微的数值误差可以忽略不计。总体而言，这几乎是完美的。为了改进，可以在实际应用中就敏感性分析或舍入方面提供简要的见解，但核心逻辑是合理且完整的。",
  "repaired_output": {
    "v": 1,
    "id": "740980684159",
    "path": null,
    "created_at": "2025-03-07T16:28:11.255997",
    "created_by": "TianGong",
    "output": "首先,设定变量：$x_1$ 表示$1Cr13$不锈钢的日产量,$x_2$ 表示$GCr15$轴承钢的日产量。目标函数为最大化收益 $$C = 1000x_1 + 200x_2$$。接着,根据约束条件列出不等式：\n1. $x_1 + x_2 ≥ 900$ (日产量限制)\n2.$ 0.15x_1 + 0.015x_2 ≤ 100$ (铬的消耗限制)\n3. $9x_1 + 6x_2 ≤ 8000$ (电力消耗限制)\n4. $x_1/36 + x_2/48 ≤ 24$ (生产时间限制)\n5. $x_1 ≥ 0,x_2 ≥ 0$ (非负条件)\n然后,将约束条件画在坐标系中,找到可行域。确定目标函数 C 的平行线,向右上方移动,直到与可行域的某一顶点相切,找到最大收益的点。通过解方程可得,最优解为 $x_1 = 636.31$ 吨,$x_2 = 303.58$ 吨,最大收益 $C = 697026$ 元。",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4o_mini",
        "model_provider": "openai",
        "prompt_id": "simple_prompt_builder"
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "intermediate_outputs": {},
  "tags": [
    "manual_run"
  ],
  "model_type": "task_run"
}