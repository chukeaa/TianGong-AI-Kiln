{
  "v": 1,
  "id": "264059110121",
  "created_at": "2025-03-07T16:28:11.234405",
  "created_by": "TianGong",
  "input": "某钢铁厂生产两种产品：$1Cr13$不锈钢（日产量为$x_1$吨）和$GCr15$轴承钢（日产量为$x_2$吨）。厂方希望最大化每日总收益，收益公式为$C = 1000x_1 + 200x_2$元。生产需满足以下条件：\n\n日产量总和：$x_1 + x_2 ≥ 900$ 吨\n铬消耗量：$0.15x_1 + 0.015x_2 ≤ 100$ 吨\n电力消耗：$9x_1 + 6x_2 ≤ 8000$ 千瓦时\n生产时间：$x_1⁄36 + x_2⁄48 ≤ 24$ 小时\n非负约束：$x_1 ≥ 0，x_2 ≥ 0$\n请根据上述条件，建立线性规划模型，并求出使收益C最大的最优日产量$x_1$和$x_2$，以及对应的最大收益。",
  "input_source": {
    "type": "human",
    "properties": {
      "created_by": "TianGong"
    }
  },
  "output": {
    "v": 1,
    "id": "281123221163",
    "path": null,
    "created_at": "2025-03-07T16:28:11.234405",
    "created_by": "TianGong",
    "output": "首先，我们需要根据题目描述建立线性规划模型。目标函数是最大化收益 \\( C \\)，约束条件包括日产量总和、铬消耗量、电力消耗和生产时间，以及非负约束。\n\n目标函数：\n\\[ C = 1000x_1 + 200x_2 \\]\n\n约束条件：\n1. 日产量总和：\\( x_1 + x_2 \\geq 900 \\)\n2. 铬消耗量：\\( 0.15x_1 + 0.015x_2 \\leq 100 \\)\n3. 电力消耗：\\( 9x_1 + 6x_2 \\leq 8000 \\)\n4. 生产时间：\\( \\frac{x_1}{36} + \\frac{x_2}{48} \\leq 24 \\)\n5. 非负约束：\\( x_1 \\geq 0, x_2 \\geq 0 \\)\n\n接下来，我们将使用Python中的`scipy.optimize`库中的`linprog`函数来求解这个线性规划问题。由于`linprog`默认是求最小化问题，我们需要将目标函数转换为最小化形式，即最大化 \\( C \\) 转换为最小化 \\( -C \\)。\n\n```python\nfrom scipy.optimize import linprog\n\n# 定义目标函数系数（最小化 -C）\nc = [-1000, -200]\n\n# 定义不等式约束矩阵 A 和 b\n# A_ub * [x1, x2] <= b_ub\nA_ub = [\n    [-1, -1],     # 日产量总和转换为 x1 + x2 <= 900\n    [0.15, 0.015], # 铬消耗量\n    [9, 6],       # 电力消耗\n    [1/36, 1/48]  # 生产时间\n]\nb_ub = [-900, 100, 8000, 24]\n\n# 定义变量边界（非负约束）\nx_bounds = (0, None)\ny_bounds = (0, None)\n\n# 求解线性规划问题\nresult = linprog(c, A_ub=A_ub, b_ub=b_ub, bounds=[x_bounds, y_bounds], method='highs')\n\n# 输出结果\nif result.success:\n    x1_optimal = result.x[0]\n    x2_optimal = result.x[1]\n    max_C = -result.fun\n    print(f\"最优日产量 x1: {x1_optimal:.2f} 吨\")\n    print(f\"最优日产量 x2: {x2_optimal:.2f} 吨\")\n    print(f\"对应的最大收益: {max_C:.2f} 元\")\nelse:\n    print(\"线性规划问题无解\")\n```\n\n这段代码首先设置了目标函数和约束条件的系数，然后使用`linprog`函数求解，并输出最优解和最大收益。这里使用了`highs`方法，它是`scipy.optimize.linprog`中的一个高效求解器。",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "glm-4-plus",
        "model_provider": "openai",
        "prompt_id": "simple_prompt_builder"
      }
    },
    "rating": {
      "v": 1,
      "id": "209902178792",
      "path": null,
      "created_at": "2025-03-07T16:28:11.234405",
      "created_by": "TianGong",
      "type": "five_star",
      "value": 4,
      "requirement_ratings": {
        "837162031303": {
          "value": 4,
          "type": "five_star"
        }
      },
      "model_type": "task_output_rating"
    },
    "model_type": "task_output"
  },
  "repair_instructions": "该回应正确地构建了线性规划模型，并将约束条件转化为适合求解器的形式。所选择的方法（将最大化问题转化为最小化目标函数的负值并指定矩阵不等式）在逻辑上是一致的，与给定的约束条件相符，并且符合标准答案。尽管代码未明确显示最终的数值结果，但运行它可能会得到与标准答案相同或非常接近的解。为了改进，该回应可以明确包含最终的数值解，验证其是否符合所有约束条件，并简要说明约束条件方向的转化方式。在最后提供一个关于求解逻辑或几何推理的简短总结也能增强解答的清晰度。",
  "repaired_output": {
    "v": 1,
    "id": "245344713267",
    "path": null,
    "created_at": "2025-03-07T16:28:11.234405",
    "created_by": "TianGong",
    "output": "首先,设定变量：$x_1$ 表示$1Cr13$不锈钢的日产量,$x_2$ 表示$GCr15$轴承钢的日产量。目标函数为最大化收益 $$C = 1000x_1 + 200x_2$$。接着,根据约束条件列出不等式：\n1. $x_1 + x_2 ≥ 900$ (日产量限制)\n2.$ 0.15x_1 + 0.015x_2 ≤ 100$ (铬的消耗限制)\n3. $9x_1 + 6x_2 ≤ 8000$ (电力消耗限制)\n4. $x_1/36 + x_2/48 ≤ 24$ (生产时间限制)\n5. $x_1 ≥ 0,x_2 ≥ 0$ (非负条件)\n然后,将约束条件画在坐标系中,找到可行域。确定目标函数 C 的平行线,向右上方移动,直到与可行域的某一顶点相切,找到最大收益的点。通过解方程可得,最优解为 $x_1 = 636.31$ 吨,$x_2 = 303.58$ 吨,最大收益 $C = 697026$ 元。",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4o_mini",
        "model_provider": "openai",
        "prompt_id": "simple_prompt_builder"
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "intermediate_outputs": {},
  "tags": [
    "manual_run"
  ],
  "model_type": "task_run"
}